/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Contract, ContractInterface } from "../Contract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorldID",
        name: "_worldId",
        type: "address",
      },
      {
        internalType: "string",
        name: "_appId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_actionId",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidNullifier",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signal",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "verifyAndExecute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052600160c0908152503480156200001957600080fd5b5060405162000a1838038062000a1883398181016040528101906200003f919062000341565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000e2620000ae836040516020016200008e919062000428565b604051602081830303815290604052620000f260201b620001ce1760201c565b82604051602001620000c292919062000470565b604051602081830303815290604052620000f260201b620001ce1760201c565b60a0818152505050505062000502565b6000600882604051602001620001099190620004e9565b6040516020818303038152906040528051906020012060001c901c9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200016c826200013f565b9050919050565b600062000180826200015f565b9050919050565b620001928162000173565b81146200019e57600080fd5b50565b600081519050620001b28162000187565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200020d82620001c2565b810181811067ffffffffffffffff821117156200022f576200022e620001d3565b5b80604052505050565b6000620002446200012b565b905062000252828262000202565b919050565b600067ffffffffffffffff821115620002755762000274620001d3565b5b6200028082620001c2565b9050602081019050919050565b60005b83811015620002ad57808201518184015260208101905062000290565b83811115620002bd576000848401525b50505050565b6000620002da620002d48462000257565b62000238565b905082815260208101848484011115620002f957620002f8620001bd565b5b620003068482856200028d565b509392505050565b600082601f830112620003265762000325620001b8565b5b815162000338848260208601620002c3565b91505092915050565b6000806000606084860312156200035d576200035c62000135565b5b60006200036d86828701620001a1565b935050602084015167ffffffffffffffff8111156200039157620003906200013a565b5b6200039f868287016200030e565b925050604084015167ffffffffffffffff811115620003c357620003c26200013a565b5b620003d1868287016200030e565b9150509250925092565b600081519050919050565b600081905092915050565b6000620003fe82620003db565b6200040a8185620003e6565b93506200041c8185602086016200028d565b80840191505092915050565b6000620004368284620003f1565b915081905092915050565b6000819050919050565b6000819050919050565b6200046a620004648262000441565b6200044b565b82525050565b60006200047e828562000455565b602082019150620004908284620003f1565b91508190509392505050565b600081519050919050565b600081905092915050565b6000620004bf826200049c565b620004cb8185620004a7565b9350620004dd8185602086016200028d565b80840191505092915050565b6000620004f78284620004b2565b915081905092915050565b60805160a05160c0516104e862000530600039600060e20152600061012c0152600060a501526104e86000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e9b7055314610030575b600080fd5b61004a600480360381019061004591906102c5565b61004c565b005b60008083815260200190815260200160002060009054906101000a900460ff16156100a3576040517f5d904cb200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633bc778e3847f0000000000000000000000000000000000000000000000000000000000000000610129886040516020016101159190610375565b6040516020818303038152906040526101ce565b867f0000000000000000000000000000000000000000000000000000000000000000876040518763ffffffff1660e01b815260040161016d969594939291906103bf565b60006040518083038186803b15801561018557600080fd5b505afa158015610199573d6000803e3d6000fd5b50505050600160008084815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b60006008826040516020016101e3919061049b565b6040516020818303038152906040528051906020012060001c901c9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102358261020a565b9050919050565b6102458161022a565b811461025057600080fd5b50565b6000813590506102628161023c565b92915050565b6000819050919050565b61027b81610268565b811461028657600080fd5b50565b60008135905061029881610272565b92915050565b600080fd5b6000819050826020600802820111156102bf576102be61029e565b5b92915050565b60008060008061016085870312156102e0576102df610205565b5b60006102ee87828801610253565b94505060206102ff87828801610289565b935050604061031087828801610289565b9250506060610321878288016102a3565b91505092959194509250565b60008160601b9050919050565b60006103458261032d565b9050919050565b60006103578261033a565b9050919050565b61036f61036a8261022a565b61034c565b82525050565b6000610381828461035e565b60148201915081905092915050565b61039981610268565b82525050565b82818337600083830152505050565b6103bb610100838361039f565b5050565b60006101a0820190506103d56000830189610390565b6103e26020830188610390565b6103ef6040830187610390565b6103fc6060830186610390565b6104096080830185610390565b61041660a08301846103ae565b979650505050505050565b600081519050919050565b600081905092915050565b60005b8381101561045557808201518184015260208101905061043a565b83811115610464576000848401525b50505050565b600061047582610421565b61047f818561042c565b935061048f818560208601610437565b80840191505092915050565b60006104a7828461046a565b91508190509291505056fea2646970667358221220bd87fab2fecc9fa6abf86f2fdf5943f945070e4b16ae7923ff47b31c46cce5bf64736f6c634300080d0033";

export class Contract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _worldId: string,
    _appId: string,
    _actionId: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Contract> {
    return super.deploy(
      _worldId,
      _appId,
      _actionId,
      overrides || {}
    ) as Promise<Contract>;
  }
  getDeployTransaction(
    _worldId: string,
    _appId: string,
    _actionId: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _worldId,
      _appId,
      _actionId,
      overrides || {}
    );
  }
  attach(address: string): Contract {
    return super.attach(address) as Contract;
  }
  connect(signer: Signer): Contract__factory {
    return super.connect(signer) as Contract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new utils.Interface(_abi) as ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Contract {
    return new Contract(address, _abi, signerOrProvider) as Contract;
  }
}
